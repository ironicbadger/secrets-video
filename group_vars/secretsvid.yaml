---

# grog.package
package_list:
  - name: bash-completion
  - name: curl
  - name: dnsutils
  - name: git
  - name: htop
  - name: ncdu
  - name: net-tools
  - name: nmap
  - name: sudo
  - name: tmux
  - name: tree
  - name: wget

# ironicbadger.bash-aliases (formerly ferrarimarco.bash-aliases)
bash_aliases:
  - { alias: "dtail", command: "docker logs -tf --tail='50' " }
  - { alias: "dcp", command: "docker-compose -f ~/docker-compose.yml " }
  - { alias: "dprunesys", command: "docker system prune --all" }
  - { alias: "dtop", command: "docker run --name ctop  -it --rm -v /var/run/docker.sock:/var/run/docker.sock quay.io/vektorlab/ctop" }
  - { alias: "zspace", command: "zfs list -o space" }
  - { alias: "zsnap", command: "zfs list -t snapshot" }
  - { alias: "dfclean", command: "df -h -x tmpfs -t fuse.mergerfs -t xfs -t ext4 -t zfs"}

# ironicbadger.docker_compose_generator
appdata_path: /opt/appdata
containers:
  - service_name: traefik
    active: true
    image: traefik
    container_name: tr
    ports:
      - 80:80
      - 443:443
      #- 8080:8080
    command:
      - --log.level=debug
      - --accesslog=false
      - --api.insecure=false
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.cloudflare.acme.dnschallenge=true
      - --certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare
      - "--certificatesresolvers.cloudflare.acme.email={{ cloudflare_account_email }}"
      - --certificatesresolvers.cloudflare.acme.storage=/letsencrypt/acme.json
      - --serversTransport.insecureSkipVerify=true
    volumes:
      - "{{ appdata_path }}/traefik/letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    environment:
      #- "CLOUDFLARE_EMAIL={{ cloudflare_account_email }}"
      - "CF_ZONE_API_TOKEN={{ cf_zone_api_token }}"
      - "CF_DNS_API_TOKEN={{ cf_dns_api_token }}"
    restart: unless-stopped
###
  - service_name: nginx
    active: true
    image: nginx
    labels:
        - traefik.enable=true
        - traefik.http.routers.nginx.rule=Host(`banana.test.badgersbits.io`)
        - traefik.http.routers.nginx.tls.certresolver=cloudflare
    restart: unless-stopped